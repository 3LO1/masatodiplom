import React, { useEffect, useState } from 'react';
import axios from 'axios';

function AdminRequestsPage() {
  const [requests, setRequests] = useState([]);

  useEffect(() => {
    fetchAllRequests();
  }, []);

  const fetchAllRequests = async () => {
    const token = localStorage.getItem('token');
    try {
      const res = await axios.get('http://localhost:5000/api/requests/all', {
        headers: { Authorization: `Bearer ${token}` }
      });
      setRequests(res.data);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞—è–≤–æ–∫:', error);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∑–∞—è–≤–∫–∏.');
    }
  };

  const handleApprove = async (id) => {
    const token = localStorage.getItem('token');
    try {
      await axios.post(
        `http://localhost:5000/api/requests/${id}/approve`,
        {},
        { headers: { Authorization: `Bearer ${token}` } }
      );
      alert('–ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.');
      fetchAllRequests();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏:', error);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–¥–æ–±—Ä–∏—Ç—å –∑–∞—è–≤–∫—É.');
    }
  };

  const handleReject = async (id) => {
    const token = localStorage.getItem('token');
    try {
      await axios.post(
        `http://localhost:5000/api/requests/${id}/reject`,
        {},
        { headers: { Authorization: `Bearer ${token}` } }
      );
      alert('–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.');
      fetchAllRequests();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏:', error);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É.');
    }
  };

  const handleGenerateContract = async (requestId) => {
    const token = localStorage.getItem('token');
    try {
      const response = await axios.post(
        `http://localhost:5000/api/requests/${requestId}/generate-contract`,
        {},
        { headers: { Authorization: `Bearer ${token}` } }
      );
      alert(`–î–æ–≥–æ–≤–æ—Ä —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω! ${response.data.message}`);
      fetchAllRequests();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–≥–æ–≤–æ—Ä–∞:', error);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –¥–æ–≥–æ–≤–æ—Ä.');
    }
  };

  return (
    <div style={{ maxWidth: '1000px', margin: 'auto', paddingTop: '50px' }}>
      <h2>–ó–∞—è–≤–∫–∏ –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–æ–≤ (–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)</h2>
      {requests.length === 0 && <p>–ù–µ—Ç –∑–∞—è–≤–æ–∫.</p>}
      {requests.map((req) => (
        <div
          key={req.id}
          style={{
            border: '1px solid #ccc',
            borderRadius: '6px',
            padding: '15px',
            marginBottom: '10px',
            backgroundColor: '#fafafa'
          }}
        >
          <p><strong>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</strong> {req.user_full_name} ({req.user_email})</p>
          <p><strong>–ü–æ–º–µ—â–µ–Ω–∏–µ ‚Ññ</strong> {req.room_number} ‚Äî —ç—Ç–∞–∂ {req.floor}, {req.area}‚ÄØ–º¬≤, {req.price}‚Ç∏, {req.room_type}</p>
          <p><strong>–ü–µ—Ä–∏–æ–¥:</strong> {req.start_date} ‚Äî {req.end_date}</p>
          <p><strong>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</strong> {req.comment || '‚Äî'}</p>
          <p><strong>–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏:</strong> {req.status}</p>

          {req.status === 'pending' && (
            <div style={{ marginTop: '10px' }}>
              <button
                onClick={() => handleApprove(req.id)}
                style={{
                  marginRight: '10px',
                  padding: '8px 12px',
                  borderRadius: '4px',
                  backgroundColor: '#2ecc71',
                  color: 'white',
                  border: 'none',
                  cursor: 'pointer'
                }}
              >
                –û–¥–æ–±—Ä–∏—Ç—å
              </button>
              <button
                onClick={() => handleReject(req.id)}
                style={{
                  padding: '8px 12px',
                  borderRadius: '4px',
                  backgroundColor: '#e74c3c',
                  color: 'white',
                  border: 'none',
                  cursor: 'pointer'
                }}
              >
                –û—Ç–∫–ª–æ–Ω–∏—Ç—å
              </button>
            </div>
          )}

          {req.status === 'approved' && (
            <div style={{ marginTop: '10px' }}>
              <button
                onClick={() => handleGenerateContract(req.id)}
                style={{
                  padding: '8px 12px',
                  borderRadius: '4px',
                  backgroundColor: '#3498db',
                  color: 'white',
                  border: 'none',
                  cursor: 'pointer'
                }}
              >
                üìÑ –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –¥–æ–≥–æ–≤–æ—Ä
              </button>
            </div>
          )}
        </div>
      ))}
    </div>
  );
}

export default AdminRequestsPage;